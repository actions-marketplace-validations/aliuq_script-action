name: Test Runner 2

on:
  workflow_dispatch:
    inputs:
      debug:
        description: Debug mode
        type: boolean
        required: false
        default: false

jobs:
  test-node:
    name: test-node:${{ matrix.os }}:${{ matrix.bun && 'bun' || 'tsx' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest]
        os: [ubuntu-latest, windows-latest, macos-latest]
        bun: [true, false]
    steps:
      - uses: actions/checkout@v4

      - name: basic
        uses: ./
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          bun: ${{ matrix.bun }}
          script: |
            console.log('Test basic')

      - name: zx-like
        uses: ./
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          bun: ${{ matrix.bun }}
          script: |
            const list = await $`ls -al .`.text()
            console.log(list)

            await $`echo "Hello World by bun"`

      - name: packages
        uses: ./
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          bun: ${{ matrix.bun }}
          packages: dayjs
          script: |
            import dayjs from 'dayjs'
            console.log(dayjs().format('YYYY-MM-DD HH:mm:ss'))

      - name: auto-install
        uses: ./
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          bun: true
          auto_install: true
          script: |
            import dayjs from 'dayjs'
            console.log(dayjs().format('YYYY-MM-DD HH:mm:ss'))

  test-bun:
    name: test-bun:${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: basic
        uses: ./bun
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          script: |
            console.log('Test basic')

      - name: zx-like
        uses: ./bun
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          script: |
            const list = await $`ls -al .`.text()
            console.log(list)

            await $`echo "Hello World by bun"`

      - name: packages
        uses: ./bun
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          packages: dayjs
          script: |
            import dayjs from 'dayjs'
            console.log(dayjs().format('YYYY-MM-DD HH:mm:ss'))

      - name: auto-install
        uses: ./bun
        continue-on-error: true
        with:
          debug: ${{ inputs.debug }}
          auto_install: true
          script: |
            import dayjs from 'dayjs'
            console.log(dayjs().format('YYYY-MM-DD HH:mm:ss'))
